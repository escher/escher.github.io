#! /usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import print_function, unicode_literals

import json
from os import listdir
from os.path import join, dirname, realpath, exists, isdir, relpath
import sys
from collections import defaultdict


top_directory = realpath(join(dirname(__file__), '..'))


def generate_index(directory, schema_version, map_model_version):
    def list_cached(directory, kind):
        top_level = []
        if isdir(directory):
            for f in listdir(directory):
                tf = join(directory, f)
                if isdir(tf):
                    for f2 in listdir(tf):
                        if f2.endswith('.json'):
                            f2 = f2.replace('.json', '')
                            top_level.append({
                                'organism': f,
                                'name': f2,
                            })
        return top_level
    return {
        'maps': list_cached(join(directory, 'maps'), 'map'),
        'models': list_cached(join(directory, 'models'), 'model'),
        'schema_version': schema_version,
        'map_model_version': map_model_version
    }


def main():
    # find the escher package.json
    package_json_path = join(top_directory, 'node_modules', 'escher',
                             'package.json')
    with open(package_json_path, 'r') as f:
        package = json.load(f)
    # find directory to index
    schema_version = package['schema_version']
    map_model_version = package['map_model_version']
    directory = join(
        top_directory,
        schema_version,
        map_model_version,
    )
    if not exists(directory):
        print('No directory to index')
        sys.exit()
    print('Indexing %s' % directory)
    index = generate_index(directory, schema_version, map_model_version)
    with open(join(top_directory, 'src', 'data', 'index.json'), 'w') as f:
        json.dump(index, f)
    print('Saved index.json')


if __name__ == '__main__':
    main()
